FROM debian:stable-20191014-slim

ENV JRE jre-8u231-linux-x64.tar.gz
ENV JRE_DIR jre1.8.0_231
ENV QUESTDB_VERSION 4.0.3

# install 'ps' command needed by questdb shell script
#RUN apt-get update && apt-get install -y procps
#RUN apt-get install linux-perf=4.19+105+deb10u1 -y

# Copy the binary file into the container at /app
COPY target/questdb-${QUESTDB_VERSION}-bin.tar.gz /app/

# Copy win64 JDK into the container at /app
COPY dist/${JRE} /app/

WORKDIR /app

# Install questdb
RUN tar xvfz questdb-${QUESTDB_VERSION}-bin.tar.gz
# Create symbolic link that docker can use to start QuestDB
RUN ln -s /app/questdb-${QUESTDB_VERSION} /app/questdb
RUN rm questdb-${QUESTDB_VERSION}-bin.tar.gz

# install JRE8
RUN tar xvfz ${JRE}
# Create symbolic link
RUN ln -s /app/${JRE_DIR} /app/jre
# remove JRE tarball
RUN rm ${JRE}

# QuestDB root directory
RUN mkdir -p /root/.questdb

# Expose database as volume
VOLUME /root/.questdb/db

# Make working folder the quest db folder
WORKDIR /app/questdb

# bash prompt
RUN echo "PS1='🐳  \[\033[1;36m\]\h \[\033[1;34m\]\W\[\033[0;35m\] \[\033[1;36m\]# \[\033[0m\]'" > /root/.bashrc

# Make port 9000 available to the world outside this container
EXPOSE 9000/tcp
EXPOSE 8892/tcp

# Run questdb when the container launches
CMD ["/app/jre/bin/java", "-cp", "/app/questdb/questdb.jar", "io.questdb.ServerMain", "-d", "/root/.questdb"]
